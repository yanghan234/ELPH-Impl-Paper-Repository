#!/usr/bin/env python3
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

def linear_fit(x,y):
    coeff = np.polyfit(x,y,1)
    return np.poly1d(coeff)

boron = pd.read_csv("boron-defect.csv")
boron_d_adi_pbe_fit = linear_fit(boron["invN3"],boron["DefectAdiPBE"])
boron_d_nad_pbe_fit = linear_fit(boron["invN3"],boron["DefectNadPBE"])
boron_d_adi_gw_fit = linear_fit(boron["invN3"],boron["DefectAdiGW"])
boron_d_nad_gw_fit = linear_fit(boron["invN3"],boron["DefectNadGW"])
boron_h_adi_pbe_fit =  linear_fit(boron["invN3"],boron["HostAdiPBE"])
boron_h_nad_pbe_fit =  linear_fit(boron["invN3"],boron["HostNadPBE"])
boron_h_adi_gw_fit =  linear_fit(boron["invN3"],boron["HostAdiGW"])
boron_h_nad_gw_fit =  linear_fit(boron["invN3"],boron["HostNadGW"])

print("Fitted boron defect state     adiabatic ZPR@PBE = %6.2f"%(boron_d_adi_pbe_fit(0)))
print("Fitted boron defect state non-adiabatic ZPR@PBE = %6.2f"%(boron_d_nad_pbe_fit(0)))
print("Fitted boron defect state     adiabatic ZPR@GW = %6.2f"%(boron_d_adi_gw_fit(0)))
print("Fitted boron defect state non-adiabatic ZPR@GW = %6.2f"%(boron_d_nad_gw_fit(0)))
print("Fitted boron host   gap       adiabatic ZPR@PBE = %6.2f"%(boron_h_adi_pbe_fit(0)))
print("Fitted boron host   gap   non-adiabatic ZPR@PBE = %6.2f"%(boron_h_nad_pbe_fit(0)))
print("Fitted boron host   gap       adiabatic ZPR@GW = %6.2f"%(boron_h_adi_gw_fit(0)))
print("Fitted boron host   gap   non-adiabatic ZPR@GW = %6.2f"%(boron_h_nad_gw_fit(0)))
# plt.plot(boron["invN3"],boron["DefectAdiPBE"],"o-",label="Defect adiabatic PBE")
# plt.plot(boron["invN3"],boron["DefectNadPBE"],"o-",label="Defect non-adiabatic PBE")
# plt.plot(boron["invN3"],boron["DefectAdiGW"],"o-",label="Defect adiabatic GW")
# plt.plot(boron["invN3"],boron["DefectNadGW"],"o-",label="Defect non-adiabatic GW")
# plt.legend()
# plt.xlabel(r"$1/N_q^3$")
# plt.ylabel("ZPR of boron defect [meV]")
# plt.show()

nitrogen = pd.read_csv("nitrogen-defect.csv")
nitrogen_d_adi_pbe_fit = linear_fit(nitrogen["invN3"],nitrogen["DefectAdiPBE"])
nitrogen_d_nad_pbe_fit = linear_fit(nitrogen["invN3"],nitrogen["DefectNadPBE"])
nitrogen_d_adi_gw_fit = linear_fit(nitrogen["invN3"],nitrogen["DefectAdiGW"])
nitrogen_d_nad_gw_fit = linear_fit(nitrogen["invN3"],nitrogen["DefectNadGW"])
nitrogen_h_adi_pbe_fit = linear_fit(nitrogen["invN3"],nitrogen["HostAdiPBE"])
nitrogen_h_nad_pbe_fit = linear_fit(nitrogen["invN3"],nitrogen["HostNadPBE"])
nitrogen_h_adi_gw_fit = linear_fit(nitrogen["invN3"],nitrogen["HostAdiGW"])
nitrogen_h_nad_gw_fit = linear_fit(nitrogen["invN3"],nitrogen["HostNadGW"])
print("Fitted nitrogen defect state     adiabatic ZPR@PBE = %6.2f"%(nitrogen_d_adi_pbe_fit(0)))
print("Fitted nitrogen defect state non-adiabatic ZPR@PBE = %6.2f"%(nitrogen_d_nad_pbe_fit(0)))
print("Fitted nitrogen defect state     adiabatic ZPR@GW = %6.2f"%(nitrogen_d_adi_gw_fit(0)))
print("Fitted nitrogen defect state non-adiabatic ZPR@GW = %6.2f"%(nitrogen_d_nad_gw_fit(0)))
print("Fitted nitrogen host     gap     adiabatic ZPR@PBE = %6.2f"%(nitrogen_h_adi_pbe_fit(0)))
print("Fitted nitrogen host     gap non-adiabatic ZPR@PBE = %6.2f"%(nitrogen_h_nad_pbe_fit(0)))
print("Fitted nitrogen host     gap     adiabatic ZPR@GW = %6.2f"%(nitrogen_h_adi_gw_fit(0)))
print("Fitted nitrogen host     gap non-adiabatic ZPR@GW = %6.2f"%(nitrogen_h_nad_gw_fit(0)))
# plt.plot(nitrogen["invN3"],nitrogen["DefectAdiPBE"],"o-",label="Defect adiabatic PBE")
# plt.plot(nitrogen["invN3"],nitrogen["DefectNadPBE"],"o-",label="Defect non-adiabatic PBE")
# plt.plot(nitrogen["invN3"],nitrogen["DefectAdiGW"],"o-",label="Defect adiabatic GW")
# plt.plot(nitrogen["invN3"],nitrogen["DefectNadGW"],"o-",label="Defect non-adiabatic GW")
# plt.legend()
# plt.xlabel(r"$1/N_q^3$")
# plt.ylabel("ZPR of nitrogen defect [meV]")
# plt.show()

